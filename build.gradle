plugins {
    id 'java'
//    id 'java-library'
    id 'jvm-test-suite'
    id 'idea'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.github.ben-manes.versions' version "0.50.0"
}

group = 'com.github.jinahya'
version = '0.0.1-SNAPSHOT'

java {
//    sourceCompatibility = '21'
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

// https://stackoverflow.com/a/74950613/330457
ext["jakarta-servlet.version"] = "5.0.0"

dependencies {
    testImplementation 'com.github.ben-manes.caffeine:caffeine'
//    runtimeOnly 'com.h2database:h2'
    // https://docs.spring.io/spring-boot/docs/current/reference/html/dependency-versions.html
    testRuntimeOnly 'io.netty:netty-resolver-dns-native-macos:4.1.101.Final:osx-aarch_64'
    testImplementation 'io.projectreactor:reactor-test'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
//    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.2.0'
//    implementation 'org.webjars:webjars-locator:0.48'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    compileOnly 'org.springframework.boot:spring-boot-starter-aop'
    testRuntimeOnly 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
//    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
//    implementation 'org.springframework.boot:spring-boot-starter-json'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
//    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.data:spring-data-commons'
}

//tasks.named('test') {
//    useJUnitPlatform()
//}

// ---------------------------------------------------------------------------------------------------------------------

tasks.withType(Test).configureEach {
    testLogging.showStandardStreams = true
}

//final TAG_LONG_RUNNING = "long-running"
final TEST_NAME_PATTERN_INTEGRATION = "*IT"

tasks.named('test') {
    useJUnitPlatform {
//        excludeTags TAG_LONG_RUNNING
    }
    filter {
        excludeTestsMatching TEST_NAME_PATTERN_INTEGRATION
    }
    if (!System.properties.containsKey('spring.profiles.active')) {
        systemProperty "spring.profiles.active", "default"
    }
}

tasks.register("integrationTest", Test) {
    // https://docs.gradle.org/current/samples/sample_jvm_multi_project_with_additional_test_types.html
    description = 'Runs integration tests.'
    group = 'verification'
    useJUnitPlatform {
//        excludeTags TAG_LONG_RUNNING
    }
    filter {
        includeTestsMatching TEST_NAME_PATTERN_INTEGRATION
    }
    shouldRunAfter(test)
    if (!System.properties.containsKey('spring.profiles.active')) {
        systemProperty "spring.profiles.active", "default" // equivalent to "development,private"
    }
}

//// https://docs.gradle.org/current/userguide/jvm_test_suite_plugin.html#jvm_test_suite_plugin
//testing {
//    suites {
//        test {
//            testType = TestSuiteType.UNIT_TEST // default
//            useJUnitJupiter()
//            dependencies {
//            }
//            sources {
//                java {
//                    exclude "**/*IT.java"
//                }
//            }
//        }
//        integrationTest(JvmTestSuite) {
//            testType = TestSuiteType.INTEGRATION_TEST
//            useJUnitJupiter()
//            dependencies {
//                implementation project()
//            }
//            sources {
//                java {
//                    srcDirs = ['src/test/java']
//                    exclude "**/*Test.java"
//                }
//            }
//        }
//    }
//}

bootRun {
    if (!System.properties.containsKey('spring.profiles.active')) {
        project.logger.info("setting spring.profiles.active with 'default'...");
        systemProperty "spring.profiles.active", "default" // equivalent to "development,private"
    }
}
